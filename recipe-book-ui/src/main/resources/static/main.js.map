{"version":3,"sources":["./src/app/change-password/change-password.component.ts","./src/app/change-password/change-password.component.html","./src/app/shared/dropdown.directive.ts","./src/app/shared/loading-spiner/loading-spiner.component.ts","./src/app/shared/loading-spiner/loading-spiner.component.html","./src/app/shared/search/search.component.ts","./src/app/shared/search/search.component.html","./src/environments/environment.ts","./src/app/shared/placeholder.directive.ts","./src/app/shared/info-dialog/info-dialog.component.ts","./src/app/shared/info-dialog/info-dialog.component.html","./src/app/shared/test.pipe.ts","./src/app/shared/common.service.ts","./src/app/app-routing.modul.ts","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/alert/alert.component.ts","./src/app/shared/alert/alert.component.html","./src/app/app.module.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/confirm-dialog/confirm-dialog.component.html","./src/app/login.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/user.model.ts","./src/app/shared/filter.pipe.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { CommonService } from '../shared/common.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  error: string;\r\n  message = 'Please enter new password!';\r\n\r\n  constructor(public dialogRef: MatDialogRef<ChangePasswordComponent>, private http: HttpClient, private commonService: CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const password = form.value.password;\r\n    const rePassword = form.value.rePassword;\r\n    try {\r\n      console.log(password + \" \" + rePassword);\r\n      this.http.post('api/user/password', {'password': password}).subscribe(\r\n        resp => {\r\n          // this.commonService.showInfo('Password was change successfully', '');\r\n          this.message = 'Password was change successfully!';\r\n        }\r\n      )\r\n   \r\n    } catch (error) {\r\n      if (error['name'] && error.name == 'InvalidCharacterError') {\r\n        this.error = 'The email or password contains an invalid character. Must contain only Latin letters and numbers!'\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\" style=\"text-align: center;\">\r\n        <div class=\"col-md-12\">\r\n        <div class=\"col-md-11\">\r\n            <h3>{{ message }}</h3>\r\n            <h4 *ngIf=\"error\">\r\n                <i style=\"color: red;\">* {{error}} &nbsp;</i>\r\n            </h4>\r\n        </div>\r\n        <div class=\"col-md-1\">\r\n                <button mat-button mat-dialog-close >\r\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" >close</mat-icon>\r\n                </button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <hr>\r\n<div mat-dialog-content>\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\r\n            <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">New password</label>\r\n                    <input type=\"password\" id=\"password\" class=\"form-control\" name=\"password\" \r\n                    ngModel required minlength=\"3\" \r\n                    placeholder=\"*Only numbers and Latin letters\"\r\n                    #password=\"ngModel\">\r\n                    <span class=\"help-block\" *ngIf=\"!password.valid && password.touched\">\r\n                        <span *ngIf=\"password.errors['minlength']\">Password must be at least 3 characers!</span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"rePassword\">Repeat password</label>\r\n                    <input type=\"password\" id=\"rePassword\" class=\"form-control\" name=\"rePassword\" \r\n                    ngModel required minlength=\"1\" \r\n                    placeholder=\"*Repeat your password\"\r\n                    #rePassword=\"ngModel\">\r\n                    <span class=\"help-block\" *ngIf=\"rePassword.touched && !(password.value == rePassword.value)\">\r\n                        Passwords don't match!\r\n                    </span>\r\n                    \r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!f.valid || !(password.value == rePassword.value)\" style=\"margin-right: 5px;\">\r\n                      Change\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n","import { Directive, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appDropdown]'\n})\nexport class DropdownDirective {\n\n  @HostBinding('class.open') isOpen = false;\n\n  @HostListener('click') openToggle(){\n    this.isOpen = !this.isOpen;\n  }\n\n  constructor() { }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-loading-spiner',\n  templateUrl: './loading-spiner.component.html',\n  styleUrls: ['./loading-spiner.component.css']\n})\nexport class LoadingSpinerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n  searchText: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onKey(event: any){\r\n    console.log(event.target.value);\r\n  }\r\n\r\n\r\n}\r\n","<form>\r\n    <mat-form-field >\r\n      <mat-label>Search Recipe</mat-label>\r\n      <input matInput placeholder=\"Ex. Pizza\" name=\"search\" type=\"search\" [(ngModel)]=\"searchText\" (keyup)=\"onKey($event)\">\r\n      <mat-icon matSuffix>search</mat-icon>\r\n    </mat-form-field>\r\n </form>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appPlaceholder]'\n})\nexport class PlaceholderDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef ) { }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-info-dialog',\r\n  templateUrl: './info-dialog.component.html',\r\n  styles: []\r\n})\r\nexport class InfoDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<InfoDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title = this.data.title;\r\n    this.message = this.data.message;\r\n  }\r\n\r\n  \r\n}\r\n","<h3 mat-dialog-title>{{ title }}</h3>\r\n<div mat-dialog-content>{{ message }}</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Ok</button>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'test'\r\n})\r\nexport class TestPipe implements PipeTransform{\r\n\r\n    transform(value: any, ...args: any[]) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { InfoDialogComponent } from './info-dialog/info-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommonService {\r\n\r\n  constructor(public dialog: MatDialog) { }\r\n  \r\n  showInfo(title: string, content: string){\r\n    let dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = {\r\n      title: title,\r\n      message: content\r\n    };\r\n    this.dialog.open(InfoDialogComponent, dialogConfig);\r\n  }\r\n\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { PreloadAllModules, RouterModule, Routes } from \"@angular/router\";\r\nimport { RecipesComponent } from \"./recipes/recipes.component\";\r\n\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', redirectTo: 'recipes/all', pathMatch: 'full'},\r\n    {\r\n      path: 'recipes/:mode', loadChildren: () => import('./recipes/recipes.module').then(m => m.RecipesModule)\r\n    },\r\n    {\r\n      path: 'shopping-list', loadChildren: () => import('./shopping-list/shopping-list.module').then(m => m.ShoppingListModule)\r\n    }\r\n  ];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes, {preloadingStrategy: PreloadAllModules})],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule{\r\n\r\n}","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AlertComponent } from \"./alert/alert.component\";\r\nimport { DropdownDirective } from \"./dropdown.directive\";\r\nimport { LoadingSpinerComponent } from \"./loading-spiner/loading-spiner.component\";\r\nimport { PlaceholderDirective } from \"./placeholder.directive\";\r\nimport { SearchComponent } from \"./search/search.component\";\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { FilterPipe } from \"./filter.pipe\";\r\nimport { TestPipe } from \"./test.pipe\";\r\nimport { InfoDialogComponent } from './info-dialog/info-dialog.component';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport { ConfirmDialogComponent } from \"./confirm-dialog/confirm-dialog.component\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport {MatMenuModule} from '@angular/material/menu';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoadingSpinerComponent,\r\n        AlertComponent,\r\n        PlaceholderDirective,\r\n        DropdownDirective,\r\n        SearchComponent,\r\n        FilterPipe,\r\n        TestPipe,\r\n        ConfirmDialogComponent,\r\n        InfoDialogComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        FormsModule,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        A11yModule,\r\n        MatMenuModule\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        LoadingSpinerComponent,\r\n        AlertComponent,\r\n        PlaceholderDirective,\r\n        DropdownDirective,\r\n        SearchComponent,\r\n        FilterPipe,\r\n        TestPipe,\r\n        ConfirmDialogComponent,\r\n        InfoDialogComponent,\r\n        MatDialogModule,\r\n        MatButtonModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        A11yModule\r\n    ]\r\n})\r\nexport class SharedModule{}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'recipe-book';\r\n\r\n  constructor(private http: HttpClient, private loginService: LoginService){}\r\n\r\n  ngOnInit(){\r\n    this.http.get<User>(\"api/user\").subscribe(\r\n      (userResp: User) => {\r\n        if(userResp){\r\n          let currenrUser = new User(userResp.id,\r\n                                      userResp.name,\r\n                                      userResp.email,\r\n                                      userResp.googleSub,\r\n                                      userResp.password,\r\n                                      userResp.enabled,\r\n                                      userResp.authorities);\r\n          this.loginService.currentUser.next(currenrUser);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  \r\n\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container\">\r\n  <div class=\"row\"  >\r\n    <div class=\"col-md-12\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.css']\n})\nexport class AlertComponent implements OnInit {\n\n  @Input() message: string;\n  @Output() cancel = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onCancel(){\n    this.cancel.next();\n  }\n\n}\n","<div class=\"backdrop\"></div>\n<div class=\"alert-box\">\n    <p>{{ message }}</p>\n    <div class=\"alert-box-actions\">\n        <button btn btn-primary (click)=\"onCancel()\">Cancel</button>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AppRoutingModule } from './app-routing.modul';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { Inject } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: string;\r\n  message: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit(): void {\r\n    this.title = this.data.title;\r\n    this.message = this.data.message;\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close('cancel');\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>{{ title}} </h2>\r\n<mat-dialog-content>{{ message }}</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <button mat-button mat-dialog-close  cdkFocusInitial>Cancel</button>\r\n  <button mat-button [mat-dialog-close]=\"true\">Delete</button>\r\n</mat-dialog-actions>\r\n\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { User } from './user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n  currentUser = new BehaviorSubject<User>(null);\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  logout(){\r\n    this.http.post('/logout', null).subscribe(\r\n      resp => {\r\n        console.log('Logout responce');\r\n        this.currentUser.next(null);\r\n      },\r\n      err => {\r\n        console.log('Logout error responce');\r\n        this.currentUser.next(null);\r\n      }\r\n    )\r\n  };\r\n\r\n  login(email: string, password: string){\r\n    let headers = new HttpHeaders({authorization : 'Basic ' + btoa(email + ':' + password)});\r\n    headers = headers.append(\"X-Requested-With\", \"XMLHttpRequest\");\r\n   return this.http.get<string>('/basic', {headers: headers, withCredentials: true}) as Observable<string>;\r\n  }\r\n\r\n  signup(name:string, email:string, password:string){\r\n    let newUser = new User(null, name, email, null, password, null, null);\r\n    return this.http.post('api/user', newUser) as Observable<User>;\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoginService } from '../login.service';\r\nimport { User } from '../user.model';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { ChangePasswordComponent } from '../change-password/change-password.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  currentUser: User = null;\r\n  currentUserSub: Subscription;\r\n\r\n  constructor(private loginService: LoginService, private router: Router, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUserSub = this.loginService.currentUser.subscribe(\r\n      user => this.currentUser = user\r\n    );\r\n  }\r\n\r\n  login(){\r\n    // open mat dialog\r\n    this.dialog.open(LoginComponent);\r\n  }\r\n\r\n  logout(){\r\n    this.loginService.logout();\r\n    this.router.navigateByUrl(`/recipes/all`);\r\n  }\r\n\r\n  changePassword(){\r\n    this.dialog.open(ChangePasswordComponent);\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    this.currentUserSub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-8\">\r\n            <nav class=\"nav navbar-default\">\r\n                <div class=\"container-fluid\">\r\n                    <div class=\"navbar-header\">\r\n                        <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\r\n                    </div>\r\n\r\n                    <div class=\"navbar-default\">\r\n                        <ul class=\"nav navbar-nav\">\r\n                            <li routerLinkActive=\"active\"><a routerLink=\"/recipes/all\">Recipes</a></li>\r\n                            <li routerLinkActive=\"active\"><a routerLink=\"/recipes/my\" *ngIf=\"currentUser\">My Recipes</a></li>\r\n                            <li routerLinkActive=\"active\"><a routerLink=\"/shopping-list\" *ngIf=\"currentUser\">Shopping List</a></li>\r\n                            <li routerLinkActive=\"active\"><a routerLink=\"/recipes/pending\" *ngIf=\"currentUser && currentUser.isAdmin()\">Pending to approve</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <button class=\"btn btn-info\" (click)=\"login()\" *ngIf=\"!currentUser\">Login</button>\r\n        </div>\r\n        <div class=\"col-md-4\" *ngIf=\"currentUser\">\r\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n                <mat-icon>more_vert</mat-icon>\r\n                {{ currentUser.name }}\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\">\r\n                <button mat-menu-item (click)=\"logout()\">Logout</button>\r\n                <button mat-menu-item (click)=\"changePassword()\">Change password</button>\r\n            </mat-menu>\r\n        </div>\r\n    </div>\r\n</div>","import { Authority } from \"./authority.model\";\r\n\r\nexport class User{\r\n\r\n    constructor(\r\n        public id: string,\r\n        public name: string,\r\n        public email: string,\r\n        public googleSub: string,\r\n        public password: string,\r\n        public enabled: number,\r\n        public authorities: [Authority]\r\n       ){}\r\n\r\n       public isAdmin(): boolean{\r\n           let admin: Authority = this.authorities.find(authority => authority.name == 'ROLE_ADMIN');\r\n           return admin ? true : false;\r\n       }\r\n\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n\r\n  transform(items: any[], searchText: string): any[] {\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => {\r\n      return it['name'].toLocaleLowerCase().includes(searchText);\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../login.service';\r\nimport { User } from '../user.model';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  message = 'Login to your account to manage your recipe and shopping list.';\r\n  error: string;\r\n  isLogin = true;\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginComponent>, private router: Router, private loginService: LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n  onSwitchMode() {\r\n    this.error = null;\r\n    this.isLogin = !this.isLogin;\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    const email = form.value.email;\r\n    const password = form.value.password;\r\n    try {\r\n      if (this.isLogin) {\r\n        // do log in\r\n        this.onLogin(email, password);\r\n      } else {\r\n        // do sign up\r\n        const name = form.value.name;\r\n        this.onSignup(name, email, password);\r\n      }\r\n    } catch (error) {\r\n      if (error['name'] && error.name == 'InvalidCharacterError') {\r\n        this.error = 'The email or password contains an invalid character. Must contain only Latin letters and numbers!'\r\n      }\r\n    }\r\n  }\r\n\r\n  onLogin(email: string, password: string) {\r\n    this.loginService.login(email, password).subscribe(\r\n      resp => {\r\n        this.successLogin();\r\n      },\r\n      err => {\r\n        this.onHandleError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSignup(name: string, email: string, password: string) {\r\n    this.loginService.signup(name, email, password).subscribe(\r\n      (resp: User) => {\r\n        this.error = null;\r\n        this.message = `Welcome ${resp.name} ! \\n` + this.message;\r\n        this.onSwitchMode();\r\n      },\r\n      err => {\r\n        this.onHandleError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  successLogin() {\r\n    this.router.navigate(['/'])\r\n      .then(() => {\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  onHandleError(err: any) {\r\n    this.error = 'Unexpected server error occured! Please try again later.';\r\n    if (err['status'] && err.status == '409') {\r\n      this.error = 'Conflict! Such e-mail already exists!';\r\n    } else if (err['error'] && err.error['message']) {\r\n      let message: string = err.error.message.toLowerCase();\r\n      if (message.includes('bad credentials')) {\r\n        this.error = 'Invalid e-mail or password!';\r\n      };\r\n      if (message.includes('cannot pass null or empty values to constructor')) {\r\n        this.error = 'This e-mail is already in use for ';\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n        <div class=\"row\" style=\"text-align: center;\">\r\n            <div class=\"col-md-12\">\r\n            <div class=\"col-md-11\">\r\n                <h3>{{ message }}</h3>\r\n                <h4 *ngIf=\"error && error.includes('e-mail is already in use') else elseBlock\">\r\n                    <i style=\"color: red;\">* {{error}} &nbsp;</i><a href=\"/oauth2/authorization/google\">Login with Google</a>\r\n                </h4>\r\n                <ng-template #elseBlock>\r\n                    <h4 *ngIf=\"error\"><i style=\"color: red;\">* {{error}}</i></h4>\r\n                </ng-template>\r\n            </div>\r\n            <div class=\"col-md-1\">\r\n                    <button mat-button mat-dialog-close >\r\n                        <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\" >close</mat-icon>\r\n                    </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <hr>\r\n    <div mat-dialog-content>\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12 col-md-6 col-md-offset-3\">\r\n                <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\">\r\n                    <div class=\"form-group\" *ngIf=\"!isLogin\">\r\n                        <label for=\"name\">Name</label>\r\n                        <input type=\"text\" id=\"name\" class=\"form-control\" name=\"name\" ngModel required #name=\"ngModel\">\r\n                        <span class=\"help-block\" *ngIf=\"!name.valid && name.touched\">\r\n                            <span *ngIf=\"name.errors['required']\">Name is required!</span>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"email\">E-Mail</label>\r\n                        <input type=\"text\" id=\"email\" class=\"form-control\" name=\"email\" ngModel email required \r\n                            #email=\"ngModel\">\r\n                        <span class=\"help-block\" *ngIf=\"!email.valid && email.touched\">\r\n                            <span *ngIf=\"email.errors['required']\">Email is required!</span>\r\n                            <span *ngIf=\"email.errors['email']\">Please enter valid email!</span>\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" class=\"form-control\" name=\"password\" \r\n                        ngModel required minlength=\"1\" \r\n                        placeholder=\"*only numbers and Latin letters\"\r\n                        #password=\"ngModel\">\r\n                        <span class=\"help-block\" *ngIf=\"!password.valid && password.touched\">\r\n                            <span *ngIf=\"password.errors['required']\">Password is required!</span>\r\n                            <span *ngIf=\"password.errors['minlength']\">Password must be at least 6 characers!</span>\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!f.valid\" style=\"margin-right: 5px;\">\r\n                            {{ isLogin ? 'Login' : 'Sign Up' }} \r\n                        </button>\r\n                        <button class=\"btn btn-primary\" type=\"button\" (click)=\"onSwitchMode()\">\r\n                            Switch to  {{ isLogin ? 'Sign Up' : 'Login' }} \r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-5\" style=\"margin-bottom: 10px;\">\r\n            </div>\r\n            <div class=\"col-md-8\" style=\"margin-bottom: 30px;\">\r\n                <a href=\"/oauth2/authorization/google\">Login with Google</a><br>\r\n                <a href=\"/oauth2/authorization/facebook\">Login with Facebook</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}