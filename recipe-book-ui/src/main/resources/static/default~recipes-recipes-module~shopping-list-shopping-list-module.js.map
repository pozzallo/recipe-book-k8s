{"version":3,"sources":["./src/app/shopping-list/shopping-list-item.model.ts","./src/app/shopping-list/shopping-list-item.service.ts","./src/app/recipes/recipe-rest.service.ts","./src/app/recipes/recipe.service.ts","./src/app/shopping-list/shopping-list-item-details.model.ts","./src/app/shopping-list/shopping-list-rest.service.ts"],"names":[],"mappings":"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","file":"default~recipes-recipes-module~shopping-list-shopping-list-module.js","sourcesContent":["\r\nexport class ShoppingListItem{\r\n\r\n    // public id: number;\r\n\r\n    constructor(public id: number, public name: string, public amount: number, public recipeName?: string){}\r\n\r\n    public toString = () : string => {\r\n        return `Item ${this.name} (id: ${this.id})`;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Recipe } from '../recipes/recipe.model';\r\nimport { RecipeService } from '../recipes/recipe.service';\r\nimport { Ingredient } from '../shared/ingredient.model';\r\nimport { ShoppingListItemDetails } from './shopping-list-item-details.model';\r\nimport { ShoppingListItem } from './shopping-list-item.model';\r\nimport { ShoppingListRestService } from './shopping-list-rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShoppingListItemService {\r\n\r\n  shoppingListItems: ShoppingListItem[] = [];\r\n  itemChanged = new Subject<ShoppingListItem[]>();\r\n  selectedItem = new Subject<ShoppingListItem>();\r\n\r\n  constructor(private restService: ShoppingListRestService, private recipeService: RecipeService) { }\r\n\r\n  // getShoppingListItems(){\r\n  //   this.restService.getShoppingListItems().subscribe(\r\n  //     items => {\r\n  //       console.log('response: ' + items);\r\n  //       this.shoppingListItems = items;\r\n  //       this.itemChanged.next(this.shoppingListItems.slice());\r\n  //       console.log('itemChanged ' + this.shoppingListItems.slice())\r\n  //     }\r\n  //   );\r\n  //   return this.shoppingListItems.slice();\r\n  // }\r\n\r\n\r\n  getShoppingListItems(){\r\n    return this.restService.getShoppingListItems().pipe(\r\n      tap(resp => this.shoppingListItems = resp)\r\n    );\r\n  }\r\n\r\n  \r\n  deleteAllItems(){\r\n    this.restService.deleteAllShoppingListItems().subscribe(\r\n      resp => {\r\n        this.shoppingListItems = [];\r\n        this.itemChanged.next(this.shoppingListItems.slice());\r\n      }\r\n    )\r\n  }\r\n\r\n  addItems(items: ShoppingListItem[]) {\r\n    this.restService.saveShoppingListItems(items).subscribe(\r\n      items => {\r\n        this.shoppingListItems.push(...items);\r\n        this.itemChanged.next(this.shoppingListItems.slice());\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteItemsByRecipeName(recipeName: string){\r\n    this.restService.deleteShoppingListItemsByRecipeName(recipeName).subscribe(\r\n      resp => {\r\n        this.shoppingListItems = this.shoppingListItems.filter(item => item.recipeName != recipeName);\r\n        this.itemChanged.next(this.shoppingListItems.slice());\r\n      }\r\n    );\r\n  }\r\n\r\n  updateShoppingListItem(id: number, item: ShoppingListItem){\r\n    this.restService.updateShoppingListitem(id, item).subscribe(\r\n      updatedItem => {\r\n        console.log(\"updated Item: \" + JSON.stringify(updatedItem));\r\n        let index = this.shoppingListItems.findIndex(item => item.id == id);\r\n        console.log('update index: ' + index);\r\n        this.shoppingListItems[index] = item;\r\n        this.itemChanged.next(this.shoppingListItems.slice());\r\n      }\r\n    )\r\n  }\r\n\r\n  addShoppingListItem(item: ShoppingListItem){\r\n    this.restService.addShoppingListitem(item).subscribe(\r\n      savedItem => {\r\n        this.shoppingListItems.push(savedItem);\r\n        this.itemChanged.next(this.shoppingListItems.slice());\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteShoppingListItem(id: number){\r\n    this.restService.deleteShoppingListItem(id).subscribe(\r\n      resp => {\r\n        let index = this.shoppingListItems.findIndex(item => item.id == id);\r\n        const deletedItem = this.shoppingListItems[index];\r\n        this.shoppingListItems.splice(index, 1);\r\n        this.itemChanged.next(this.shoppingListItems.slice());\r\n      }\r\n    );\r\n  }\r\n\r\n  private groupBy(key: string, array: any) {\r\n      return array.reduce((acc, obj) => {\r\n        const property = obj[key];\r\n        acc[property] = acc[property] || [];\r\n        acc[property].push(obj);\r\n        return acc;\r\n      }, {});\r\n  }\r\n\r\n  groupShoppingListItem(key: string, array: ShoppingListItem[]): ShoppingListItemDetails[] {\r\n    let sortedItems: ShoppingListItemDetails[] = [];\r\n    let sortedItemsRow = this.groupBy(key, array);\r\n    for(let prop in sortedItemsRow){\r\n      sortedItems.push(new ShoppingListItemDetails(prop, sortedItemsRow[prop]));\r\n    }\r\n    return sortedItems;\r\n  }\r\n\r\n  convertIngredientsToShoppingListItems(ingredients: Ingredient[], recipeName?: string): ShoppingListItem[]{\r\n    let shoppingListItems: ShoppingListItem[] = [];\r\n    let tempRecipeName = recipeName ? recipeName : null;\r\n    shoppingListItems = ingredients.map(ingredient => {\r\n      return new ShoppingListItem(null, ingredient.name, ingredient.amount, tempRecipeName);\r\n    });\r\n    return shoppingListItems;\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Recipe } from './recipe.model';\r\nimport { ShoppingListItem } from '../shopping-list/shopping-list-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeRestService {\r\n\r\n  baseUrl = 'api/recipes';\r\n  // baseUrl = 'http://localhost:8080/api/recipes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getRecipes(){\r\n    return this.http.get(this.baseUrl) as Observable<Recipe[]>;\r\n  }\r\n\r\n  saveRecipe(recipe: Recipe){\r\n    return this.http.post(this.baseUrl, recipe) as Observable<Recipe>;\r\n  }\r\n\r\n  updateRecipe(id: string, recipe: Recipe) {\r\n    return this.http.put(`${this.baseUrl}/${id}`, recipe ) as Observable<Recipe>;\r\n  }\r\n\r\n  getRecipe(id: string){\r\n    return this.http.get(`${this.baseUrl}/${id}`) as Observable<Recipe>;\r\n  }\r\n\r\n  deleteRecipe(id: string){\r\n    return this.http.delete(`${this.baseUrl}/${id}`) as Observable<any>;\r\n  }\r\n\r\n  \r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { RecipeRestService } from './recipe-rest.service';\r\nimport { Recipe } from './recipe.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeService {\r\n\r\n  recipesChanged = new BehaviorSubject<Recipe[]>([]);\r\n  recipes: Recipe[] = [];\r\n  recipeChanged = new Subject<Recipe>();\r\n\r\n  constructor(private recipeRestService: RecipeRestService, private http: HttpClient) { }\r\n\r\n  setRecipes(recipes: Recipe[]){\r\n    this.recipes = recipes;\r\n    this.recipesChanged.next(this.recipes.slice());\r\n  }\r\n\r\n  getRecipes(){\r\n   return this.recipeRestService.getRecipes().pipe(\r\n     tap(resp => this.recipes = resp)\r\n   );\r\n  }\r\n\r\n  getRecipe(id: string){\r\n    return this.recipeRestService.getRecipe(id);\r\n  }\r\n\r\n  addRecipe(recipe: Recipe){\r\n    this.recipeRestService.saveRecipe(recipe).subscribe(\r\n      (resp: Recipe) => {\r\n        this.recipes.push(resp);\r\n        this.recipesChanged.next(this.recipes.slice());\r\n      } \r\n    )\r\n  }\r\n\r\n  updateRecipe(recipeId: string, recipe: Recipe){\r\n    this.recipeRestService.updateRecipe(recipeId, recipe).subscribe(\r\n      respRecipe => {\r\n        let index = this.recipes.findIndex(item => item.id == recipeId);\r\n        this.recipes[index] = respRecipe;\r\n        this.recipesChanged.next(this.recipes.slice());\r\n        this.recipeChanged.next(respRecipe);\r\n      } \r\n    );\r\n  }\r\n\r\n  deleteRecipe(id: string){\r\n    this.recipeRestService.deleteRecipe(id).subscribe(\r\n      resp => {\r\n        let index = this.recipes.findIndex(item => item.id == id);\r\n        this.recipes.splice(index, 1);\r\n        this.recipesChanged.next(this.recipes.slice());\r\n      }\r\n    );\r\n  }\r\n\r\n  addToMyRecipes(recipe: Recipe ){\r\n    return this.http.post(`api/user/recipes`, recipe) as Observable<Recipe>;\r\n  }\r\n\r\n  shareRecipe(id: string) {\r\n   return this.http.get(`api/recipes/${id}/share`) as Observable<any>;\r\n  }\r\n\r\n  approveRecipe(recipe: Recipe) {\r\n    return this.http.post(`api/recipes/approve`, recipe) as Observable<any>;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { ShoppingListItem } from \"./shopping-list-item.model\";\r\n\r\nexport class ShoppingListItemDetails{\r\n    name: string;\r\n    items: ShoppingListItem[];\r\n\r\n    constructor(name: string, items: ShoppingListItem[]){\r\n        this.name = name;\r\n        this.items = items;\r\n    }\r\n\r\n    calculateTotal(): number{\r\n        let total = 0;\r\n        for(let item of this.items){\r\n            total += item.amount;\r\n        }\r\n        return total;\r\n    }\r\n\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ShoppingListItem } from './shopping-list-item.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShoppingListRestService {\r\n  private baseUrl = 'api/shoppingList';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getShoppingListItems(){\r\n    return this.http.get(`${this.baseUrl}/items`) as Observable<ShoppingListItem[]>;\r\n  }\r\n\r\n  saveShoppingListItems(items: ShoppingListItem[]){\r\n    return this.http.post(`${this.baseUrl}/items`, items) as Observable<ShoppingListItem[]>;\r\n  }\r\n\r\n  updateShoppingListitem(id: number, item: ShoppingListItem) {\r\n    return this.http.put(`${this.baseUrl}/items/${id}`, item) as Observable<ShoppingListItem>;\r\n  }\r\n\r\n  addShoppingListitem(item: ShoppingListItem) {\r\n    return this.http.post(`${this.baseUrl}/items/item`, item) as Observable<ShoppingListItem>;\r\n  }\r\n\r\n  deleteShoppingListItem(id: number){\r\n    return this.http.delete(`${this.baseUrl}/items/${id}`) as Observable<any>;\r\n  }\r\n\r\n  deleteAllShoppingListItems(){\r\n    return this.http.delete(`${this.baseUrl}/items/all`) as Observable<any>;\r\n  }\r\n\r\n  deleteShoppingListItemsByRecipeName(recipeName: string){\r\n    return this.http.delete(`${this.baseUrl}/items/recipes/${recipeName}`) as Observable<any>;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}